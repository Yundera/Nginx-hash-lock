pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Trust proxy headers for proper redirects
    map $http_x_forwarded_proto $redirect_scheme {
        default $scheme;
        https https;
        http http;
    }

    # Use container cache directories
    client_body_temp_path /var/cache/nginx/client_temp;
    proxy_temp_path /var/cache/nginx/proxy_temp;
    fastcgi_temp_path /var/cache/nginx/fastcgi_temp;
    uwsgi_temp_path /var/cache/nginx/uwsgi_temp;
    scgi_temp_path /var/cache/nginx/scgi_temp;

    server {
        listen LISTEN_PORT_PLACEHOLDER;

        # Force relative redirects (don't include scheme/host/port)
        absolute_redirect off;

        # Custom error pages
        error_page 403 /403.html;
        location = /403.html {
            root /usr/share/nginx/html;
            internal;
        }

        location = /login.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Health check endpoint
        location /health {
            return 200 "OK";
        }

        # Auth service endpoints (internal use and login page)
        location /login {
            proxy_pass http://127.0.0.1:9999/login;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /auth/ {
            proxy_pass http://127.0.0.1:9999/auth/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;
        }

        # Internal auth check endpoint
        location = /internal-auth-check {
            internal;
            proxy_pass http://127.0.0.1:9999/auth/check;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Cookie $http_cookie;
        }

        # Allow specific paths if configured (optional public API endpoints)
        location ~ ^/(ALLOWED_PATHS_PLACEHOLDER)(/|$) {
            proxy_pass http://BACKEND_HOST_PLACEHOLDER:BACKEND_PORT_PLACEHOLDER;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Allow specific file extensions if configured (optional static assets)
        location ~* \.(ALLOWED_EXTENSIONS_PLACEHOLDER)$ {
            proxy_pass http://BACKEND_HOST_PLACEHOLDER:BACKEND_PORT_PLACEHOLDER;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Main location - authentication logic will be inserted here
        location / {
AUTH_CHECK_BLOCK_PLACEHOLDER
            proxy_pass http://BACKEND_HOST_PLACEHOLDER:BACKEND_PORT_PLACEHOLDER;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Cookie $http_cookie;
        }
    }
}

